<?xml version="1.0" standalone="yes"?>

<sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron">

	<sch:ns uri="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" prefix="cac"></sch:ns>
	<sch:ns uri="urn:grow:names:specification:ubl:schema:xsd:ESPDRequest-1" prefix="espd-req"></sch:ns>
	<sch:ns uri="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" prefix="cbc"></sch:ns>
	<sch:ns uri="urn:isa:names:specification:ubl:schema:xsd:CEV-CommonBasicComponents-1" prefix="cev-cbc"></sch:ns>
	<sch:ns uri="urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1" prefix="ccv-cbc"></sch:ns>
	<sch:ns uri="urn:isa:names:specification:ubl:schema:xsd:CEV-CommonAggregateComponents-1" prefix="cev"></sch:ns>
	<sch:ns uri="urn:grow:names:specification:ubl:schema:xsd:ESPDResponse-1" prefix="espd"></sch:ns>
	<sch:ns uri="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" prefix="ext"></sch:ns>
	<sch:ns uri="urn:grow:names:specification:ubl:schema:xsd:ESPD-CommonBasicComponents-1" prefix="espd-cbc"></sch:ns>
	<sch:ns uri="urn:isa:names:specification:ubl:schema:xsd:CCV-CommonAggregateComponents-1" prefix="ccv"></sch:ns>
	<sch:ns uri="urn:grow:names:specification:ubl:schema:xsd:ESPD-CommonAggregateComponents-1" prefix="espd-cac"></sch:ns>
	
	
	<sch:pattern> 
	
		
		<sch:rule context="espd-req:ESPDRequest">
			<sch:assert test="count(cbc:UBLVersionID) = 1">cbc:UBLVersionID uguale: a 1</sch:assert>   
			<sch:assert test="count(cbc:CustomizationID) = 1"> cbc:CustomizationID: uguale a 1</sch:assert> 
			<sch:assert test="count(cbc:ID) = 1">cbc:ID: uguale a 1</sch:assert> 
			<sch:assert test="count(cbc:IssueDate) = 1">cbc:IssueDate: uguale a 1</sch:assert> 
			<sch:assert test="count(cac:ContractingParty) = 1">cac:ContractingParty: uguale a 1</sch:assert>
			<sch:assert test="count(cac:ProcurementProject) = 1">cac:ProcurementProject: uguale a 1</sch:assert>
			<sch:assert test="count(cac:ProcurementProjectLot) &gt; 0">cac:ProcurementProjectLot: maggiore di 0</sch:assert>			
			<sch:assert test="count(cac:TenderingCriterion) &gt; 0">cac:TenderingCriterion 1..n</sch:assert>			
			<sch:assert test="count(cac:TenderingCriterion/cbc:Description) &gt; 0">cac:TenderingCriterion/cbc:Description 1..n</sch:assert>			
			<sch:assert test="count(cac:TenderingCriterion/cbc:WeightingConsiderationDescription) &gt; -1">cac:TenderingCriterion/cbc:WeightingConsiderationDescription 0..n</sch:assert>
			<sch:assert test="count(cac:TenderingCriterion/cac:SubTenderingCriterion) &gt; -1">cac:TenderingCriterion/cac:SubTenderingCriterion 0..n</sch:assert>
			<sch:assert test="count(cac:TenderingCriterion/cac:Legislation) &gt; -1">cac:TenderingCriterion/cac:Legislation 0..n</sch:assert>			
			<sch:assert test="count(cac:TenderingCriterion/cac:Legislation/cbc:Title) &gt; 0">cac:TenderingCriterion/cac:Legislation/cbc:Title 1..n</sch:assert>			
			<sch:assert test="count(cac:TenderingCriterion/cac:Legislation/cbc:Description) &gt; -1">cac:TenderingCriterion/cac:Legislation/cbc:Description 0..n</sch:assert>
			<sch:assert test="count(cac:TenderingCriterion/cac:Legislation/cbc:JurisdictionLevel) &gt; -1">cac:TenderingCriterion/cac:Legislation/cbc:JurisdictionLevel 0..n</sch:assert>
			<sch:assert test="count(cac:TenderingCriterion/cac:Legislation/cbc:Article) &gt; -1">cac:TenderingCriterion/cac:Legislation/cbc:Article 0..n</sch:assert>					
			<sch:assert test="count(cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup) &gt; -1">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup 0..n</sch:assert>					
			<sch:assert test="count(cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty) &gt; 0">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty 1..n</sch:assert>			
			<sch:assert test="count(cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cac:TemplateEvidence) &gt; -1">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cac:TemplateEvidence 0..n</sch:assert>			
			<sch:assert test="count(cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:SubsidiaryTenderingCriterionPropertyGroup) &gt; -1">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:SubsidiaryTenderingCriterionPropertyGroup 0..n</sch:assert>		
			<sch:assert test="count(cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:SubsidiaryTenderingCriterionPropertyGroup/cac:TenderingCriterionProperty) &gt; 0">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:SubsidiaryTenderingCriterionPropertyGroup/cac:TenderingCriterionProperty 1..n</sch:assert>
			<sch:assert test="count(cac:TenderingCriterionPropertyGroup/cac:SubsidiaryTenderingCriterionPropertyGroup/cac:SubsidiaryTenderingCriterionPropertyGroup) &gt; -1">cac:TenderingCriterionPropertyGroup/cac:SubsidiaryTenderingCriterionPropertyGroup/cac:SubsidiaryTenderingCriterionPropertyGroup 0..n</sch:assert>
		</sch:rule>
		
	
		<sch:rule context="cbc:UBLVersionID">
			<sch:assert test="@schemeAgencyID">cbc:UBLVersionID: must have schemeAgencyID</sch:assert>
			<sch:assert test="(text()='2.2' and @schemeAgencyID='OASIS-UBL-TC')">Usare il valore "2.2". Usare anche "OASIS-UBL-TC" per l'attributo schemeAgencyID</sch:assert>   			
		</sch:rule>
		
		<sch:rule context="cbc:ProfileID">
			<sch:assert test="@schemeAgencyID">cbc:ProfileID: must have schemeAgencyID</sch:assert>
			<sch:assert test="@schemeVersionID">cbc:ProfileID: must have schemeVersionID</sch:assert>
			<sch:assert test="(text()='4.1' and @schemeAgencyID='CEN-BII' and @schemeVersionID='2.1.0')">Utilizzare il valore "4.1". &#xc3;&#x2c6; possibile usare anche "CEN-BII" per l'attributo schemeAgencyID e "2.1.0" per l'attributo schemeVersionID </sch:assert>   			
		</sch:rule>
		
		<sch:rule context="cbc:ProfileExecutionID">
			<sch:assert test="@schemeAgencyID">cbc:ProfileExecutionID: must have schemeAgencyID</sch:assert>
			<sch:assert test="(@schemeAgencyID='EU-COM-GROW')">Uso obbligatorio della CodeList ProfileExecutionID. Utilizzare il valore "EU-COMGROW" per l'attributo SchemeAgencyID.</sch:assert>   			
		</sch:rule>
		
		<sch:rule context="cbc:CustomizationID">
			<sch:assert test="@schemeAgencyID">cbc:CustomizationID: must have schemeAgencyID</sch:assert>
			<sch:assert test="@schemeVersionID">cbc:CustomizationID: must have schemeVersionID</sch:assert>			
			<sch:assert test="(text()='https://www.cen.eu/work/areas/ICT/eBusiness/Pages/WS-BII.aspx' and @schemeAgencyID='CEN-BII' and @schemeVersionID='2.1.0')">Utilizzare il valore &#xe2;&#x20ac;&#x153;https://www.cen.eu/work/areas/ICT/eBusiness/Pages/WS-BII.aspx&#xe2;&#x20ac;&#xfffd;. Usare anche &#xe2;&#x20ac;&#x153;CEN-BII&#xe2;&#x20ac;&#xfffd; per l'attributo schemeAgencyID e &#xe2;&#x20ac;&#x153;2.1.0&#xe2;&#x20ac;&#xfffd; per l'attributo schemeVersionID.</sch:assert>			
		</sch:rule>
		
		<sch:rule context="cbc:VersionID">
			<sch:assert test="text()='1.0'">cbc:VersionID: Generalmente dovrebbe essere una sola versione del ESPD. Le modifiche al contenuto implicano la modifica dell'identificativo della versione e un riferimento alla versione precedente. La prima versione assume il valore &#xe2;&#x20ac;&#x153;1.0&#xe2;&#x20ac;&#xfffd;. &#xc3;&#x2c6; buona norma aggiungere un valore decimale in caso di modifiche minori (errori di battiture e correzioni formali). Negli altri casi &#xc3;&#xa8; meglio cambiare la parte intera della versione. Nel mondo ordini la prima versione non si indica, ma si usa un tag versione a due cifre dalla prima variazione in avanti</sch:assert>   			
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty">
			<sch:assert test="count(cac:Party) = 1">cac:ContractingParty: uguale a 1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:Party">
			<sch:assert test="count(cac:PartyIdentification) = 1">cac:Party/cac:PartyIdentification: uguale a 1</sch:assert>
			<sch:assert test="count(cac:PartyName) = 1">cac:Party/cac:PartyName: uguale a 1</sch:assert>
			<sch:assert test="count(cac:PostalAddress) = 1">cac:Party/cac:PostalAddress: uguale a 1</sch:assert>
		</sch:rule>  
		
		<sch:rule context="cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID">
			<sch:assert test="@schemeAgencyID">cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID:  must have schemeAgencyID</sch:assert>				
			<sch:assert test="@schemeID">cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID:  must have schemeID</sch:assert>				
			<sch:assert test="(@schemeAgencyID = 'AdE' and @schemeID = 'IT:CF')">Codice fiscale stazione appaltante Utilizzare il valore &#xe2;&#x20ac;&#x153;AdE&#xe2;&#x20ac;&#xfffd; per l&#xe2;&#x20ac;&#x2122;attributo schemeAgencyID ed il valore &#xe2;&#x20ac;&#x153;IT:CF&#xe2;&#x20ac;&#xfffd; per l&#xe2;&#x20ac;&#x2122;attributo schemeID.</sch:assert>				
		</sch:rule>
		
		<sch:rule context="cac:PartyName">
			<sch:assert test="count(cbc:Name) = 1">cbc:Name: uguale a 1</sch:assert>			
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party/cac:PostalAddress">			
			<sch:assert test="count(cac:Country) = 1">cac:ContractingParty/cac:Party/cac:PostalAddress/cbc:StreetName: uguale a 1</sch:assert>			
		</sch:rule>
		
		<sch:rule context="cac:Country">
			<sch:assert test="count(cbc:IdentificationCode) = 1">cac:Country/cbc:IdentificationCode: uguale a 1</sch:assert>						
		</sch:rule>
		
		
		
		<sch:rule context="cac:ServiceProviderParty">
			<sch:assert test="count(cac:Party) = 1">cac:ServiceProviderParty/cac:Party : uguale a 1</sch:assert>						
		</sch:rule>
		
		<sch:rule context="cac:ServiceProviderParty/cac:Party">
			<sch:assert test="count(cac:PartyIdentification) = 1">cac:ServiceProviderParty/cac:Party/cac:PartyIdentification:  uguale a 1</sch:assert>
			<sch:assert test="count(cac:PartyName) = 1">cac:ServiceProviderParty/cac:Party/cac:PartyName: uguale a 1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ServiceProviderParty/cac:Party/cac:PartyIdentification">
			<sch:assert test="count(cbc:ID) = 1">cac:ServiceProviderParty/cac:Party/cac:PartyIdentification/cbc:ID: uguale a 1</sch:assert>					
		</sch:rule>
		
		<sch:rule context="cac:ServiceProviderParty/cac:Party/cac:PartyIdentification/cbc:ID">
			<sch:assert test="@schemeAgencyID">cac:ServiceProviderParty/cac:Party/cac:PartyIdentification/cbc:ID:  must have schemeAgencyID</sch:assert>				
			<sch:assert test="@schemeID">cac:ServiceProviderParty/cac:Party/cac:PartyIdentification/cbc:ID:  must have schemeID</sch:assert>				
			<sch:assert test="(@schemeAgencyID = 'AdE' and @schemeID = 'IT:VAT')">Indicare la P.IVA o il CF del soggetto che mette a disposizione la piattaforma su cui compilare l'ESPD, Utilizzare il valore &#xe2;&#x20ac;&#x153;AdE&#xe2;&#x20ac;&#xfffd; per l&#xe2;&#x20ac;&#x2122;attributo schemeAgencyID ed il valore &#xe2;&#x20ac;&#x153;IT:VAT&#xe2;&#x20ac;&#xfffd; per l&#xe2;&#x20ac;&#x2122;attributo schemeID.</sch:assert>				
		</sch:rule>
		
		<sch:rule context="cac:ServiceProviderParty/cac:Party/cac:PartyName">			
			<sch:assert test="count(cac:Name) = 1">cac:ServiceProviderParty/cac:Party/cac:PartyName/cac:Name : uguale a 1</sch:assert>
		</sch:rule>

		<sch:rule context="cac:ServiceProviderParty/cac:Party/cac:PostalAddress">			
			<sch:assert test="count(cac:Country) = 1">cac:ServiceProviderParty/cac:Party/cac:PostalAddress/cac:Country: uguale a 1</sch:assert>
		</sch:rule>
	
		
		<sch:rule context="cac:ServiceProviderParty/cac:Party/cac:PostalAddress/cac:Country">			
			<sch:assert test="count(cac:IdentificationCode) = 1">cac:ServiceProviderParty/cac:Party/cac:PostalAddress/cac:Country/cac:IdentificationCode : uguale a 1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ProcurementProject/cac:MainCommodityClassification">			
			<sch:assert test="count(cbc:ItemClassificationCode) &gt; 0">cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode maggiore di 0</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode">			
			<sch:assert test="@ListID">cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode must have ListID</sch:assert>				
			<sch:assert test="@ListAgencyName">cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode must have ListAgencyName</sch:assert>	
			<sch:assert test="@ListVersionID">cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode must have ListVersionID</sch:assert>				
			<sch:assert test="(@ListID = 'CPV' and @ListAgencyName = 'EU-COM-GROW' and @ListVersionID = '213/2008')">Attenzione la cardinalit&#xc3;&#xa0; dell'elemento base &#xc3;&#xa8; 0..1 ma la cardinalit&#xc3;&#xa0; della classe (Main Commodity Classification) &#xc3;&#xa8; 0..n. Ricordarsi di specificare gli attributi &#xc2;&#xb7; ListID = &#xe2;&#x20ac;&#x153;CPV&#xe2;&#x20ac;&#xfffd; &#xc2;&#xb7; ListAgencyName = &#xe2;&#x20ac;&#x153;EU-COM-GROW&#xe2;&#x20ac;&#xfffd;,&#xc2;&#xb7; ListVersionID = &#xe2;&#x20ac;&#x153;213/2008&#xe2;&#x20ac;&#xfffd;.</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ProcurementProjectLot">			
			<sch:assert test="count(cbc:ID) =1 ">cac:ProcurementProjectLot/cdc:ID = 1</sch:assert>
		</sch:rule>
		
		
		<sch:rule context="cac:ContractingParty">
			<sch:assert test="count(cbc:BuyerProfileURI) &lt; 2">cac:ContractingParty/cbc:BuyerProfileURI 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party/cac:PartyIdentification">
			<sch:assert test="count(cbc:ID) &lt; 2">cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party">		
			<sch:assert test="count(cbc:WebsiteURI) &lt; 2">cac:ContractingParty/cac:Party/cbc:WebsiteURI 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party">
			<sch:assert test="count(cbc:EndPointID) &lt; 2">cac:ContractingParty/cac:Party/cbc:EndPointID 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party/cac:PostalAddress">
			<sch:assert test="count(cbc:StreetName) &lt; 2">cac:ContractingParty/cac:Party/cac:PostalAddress/cbc:StreetName 0..1</sch:assert>	
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party/cac:PostalAddress">
			<sch:assert test="count(cbc:CityName) &lt; 2">cac:ContractingParty/cac:Party/cac:PostalAddress/cbc:CityName 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party/cac:PostalAddress">
			<sch:assert test="count(cbc:PostalZone) &lt; 2">cac:ContractingParty/cac:Party/cac:PostalAddress/cbc:PostalZone 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party/cac:PostalAddress/cac:Country">
			<sch:assert test="count(cbc:Name) &lt; 2">cac:ContractingParty/cac:Party/cac:PostalAddress/cac:Country/cbc:Name 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party/cac:Contact">
			<sch:assert test="count(cbc:Name) &lt; 2">cac:ContractingParty/cac:Party/cac:Contact/cbc:Name 0..1</sch:assert>		
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party/cac:Contact">
			<sch:assert test="count(cbc:Telephone) &lt; 2">cac:ContractingParty/cac:Party/cac:Contact/cbc:Telephone 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party/cac:Contact">
			<sch:assert test="count(cbc:Telefax) &lt; 2">cac:ContractingParty/cac:Party/cac:Contact/cbc:Telefax 0..1</sch:assert>		
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party/cac:Contact">
			<sch:assert test="count(cbc:ElectronicMail) &lt; 2">cac:ContractingParty/cac:Party/cac:Contact/cbc:ElectronicMail 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:ContractingParty/cac:Party/cac:ServiceProviderParty/cac:Party">
		<sch:assert test="count(cbc:WebsiteURI) &lt; 2">cac:ContractingParty/cac:Party/cac:ServiceProviderParty/cac:Party/cbc:WebsiteURI 0..1</sch:assert>
			</sch:rule>

		<sch:rule context="cac:ContractingParty/cac:Party/cac:ServiceProviderParty/cac:Party">
			<sch:assert test="count(cbc:EndPointID) &lt; 2">cac:ContractingParty/cac:Party/cac:ServiceProviderParty/cac:Party/cbc:EndPointID 0..1</sch:assert>
		</sch:rule>

		<sch:rule context="cac:ProcurementProject">
			<sch:assert test="count(cbc:Name) &lt; 2">cac:ProcurementProject/cbc:Name 0..1</sch:assert>
		</sch:rule>

		<sch:rule context="cac:ProcurementProject">
			<sch:assert test="count(cbc:Description) &lt; 2">cac:ProcurementProject/cbc:Description..1</sch:assert>		
		</sch:rule>

		<sch:rule context="cac:ProcurementProject">
			<sch:assert test="count(cbc:ProcurementTypeCode) &lt; 2">cac:ProcurementProject/cbc:ProcurementTypeCode 0..1</sch:assert>
		</sch:rule>
		
		
		
		
		<sch:rule context="cac:TenderingCriterion/cbc:ID">
			<sch:assert test="@schemeAgencyID">cac:TenderingCriterion/cbc:ID: must have schemeAgencyID</sch:assert>
			<sch:assert test="(@schemeAgencyID='EU-COM-GROW')">Utilizzare l&#xe2;&#x20ac;&#x2122;identificatore UUID di Criterio specificato nella tassonomia dei criteri (allegato A) Utilizzare &#xe2;&#x20ac;&#x153;EU-COM-GROW&#xe2;&#x20ac;&#xfffd; come valore per l&#xe2;&#x20ac;&#x2122;attributo schemeAgencyID</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cbc:CriterionTypeCode">
			<sch:assert test="@listID">cac:TenderingCriterion/cbc:CriterionTypeCode: must have listID</sch:assert>
			<sch:assert test="@listAgencyName">cac:TenderingCriterion/cbc:CriterionTypeCode: must have listAgencyName</sch:assert>
			<sch:assert test="@listVersionID">cac:TenderingCriterion/cbc:CriterionTypeCode: must have listVersionID</sch:assert>
			<sch:assert test="(@listID='Element Code' and @listAgencyName='EU-COM-GROW' and @listVersionID='2.1.1' )">Uso obbigatorio dei criteri indicati da eCertis che sono anche indicati nel documento Allegato A Usare il valore &#xe2;&#x20ac;&#x153;Element Code&#xe2;&#x20ac;&#xfffd; per l'attributo listID, "EU-COM-GROW&#xe2;&#x20ac;&#xfffd; per listAgencyName e &#xe2;&#x20ac;&#x153;2.1.0&#xe2;&#x20ac;&#xfffd; per listVersionID. Nota: Potrebbe esistere una incongruenza tra il cbc:CriterionTypeCode come definito in questa sede e l&#xe2;&#x20ac;&#x2122;omologo attributo definito nella ESPD-CodeListsV2.1.0.xlsx. Si veda l&#xe2;&#x20ac;&#x2122;issue 224 (https://github.com/ESPD/ESPDEDM/issues/224) sul repository GitHub ufficiale.</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:ID">
			<sch:assert test="@schemaID">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:ID: must have schemaID</sch:assert>
			<sch:assert test="@schemeVersionID">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:ID: must have listAgencyName</sch:assert>			
			<sch:assert test="(@schemaID='ISO / IEC 9834-8: 2008' and @schemeVersionID='4')">Gli identificativi di propriet&#xc3;&#xa0; devono utilizzare i numeri UUID (versione 4) generati automaticamente. Le rispostedell'operatore economico (nel documento ESDP Response) si riferiscono a questo UUID per collegare la risposta con una, e solo una,propriet&#xc3;&#xa0; del criterio. Vedere la sezione sulla ESPD Response per gli esempi. Utilizzare il valore "ISO / IEC 9834-8: 2008" per l'attributo schemaID, il CODICE FISCALE della stazione appaltante per schemeAgencyName e "4" per schemeVersionID.</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:ExpectedID">
			<sch:assert test="@schemaID">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:ID: must have schemaID</sch:assert>
			<sch:assert test="@schemeVersionID">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:ID: must have listAgencyName</sch:assert>			
			<sch:assert test="(@schemaID='ISO / IEC 9834-8: 2008' and @schemeVersionID='4')">Verificare che il valore dicac:TypeCode contenga QUESTION e che `cac:ValueTypeCode` sia diverso da NONE. Utilizzare il valore "ISO / IEC 9834-8: 2008" per l'attributo schemaID, il CODICE FISCALE della stazione appaltante per schemeAgencyName e "4" per schemeVersionID.</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup">
			<sch:assert test="count(cbc:ID) = 1 ">1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion">
			<sch:assert test="count(cbc:ID) =1 ">2</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion">
			<sch:assert test="count(cbc:Name) =1 ">3</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion">
			<sch:assert test="count(cbc:CriterionTypeCode) =1 ">4</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup">
			<sch:assert test="count(cbc:ID) =1 ">5</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:ID) =1 ">6</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:Description) =1 ">7</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:TypeCode) =1 ">8</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:ValueDataTypeCode) =1 ">9</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:SubsidiaryTenderingCriterionPropertyGroup">
			<sch:assert test="count(cbc:ID) =1 ">10</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:SubsidiaryTenderingCriterionPropertyGroup">
			<sch:assert test="count(cbc:PropertyGroupTypeCodePropertyGroupTypeCode) =1 ">12</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion">
			<sch:assert test="count(cbc:WeightNumeric) &lt; 2">cac:TenderingCriterion/cbc:Description 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion">
			<sch:assert test="count(cbc:EvaluationMethodTypeCode) &lt; 2">cac:TenderingCriterion/cbc:EvaluationMethodTypeCode 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:Legislation">
			<sch:assert test="count(cbc:ID) &lt; 2">cac:TenderingCriterion/cac:Legislation/cbc:ID 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:Legislation">
			<sch:assert test="count(cbc:URI) &lt; 2">cac:TenderingCriterion/cac:Legislation/cbc:URI 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup">
			<sch:assert test="count(cbc:PropertyGroupTypeCode) &lt; 2">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cbc:PropertyGroupTypeCode 0..1</sch:assert>	
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:Name) &lt; 2">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:Name 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:ValueUnitCode) &lt; 2">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:ValueUnitCode 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:ValueCurrencyCode) &lt; 2">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:ValueCurrencyCode 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:ExpectedID) &lt; 2">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:ExpectedID 0..1</sch:assert>			
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:ExpectedCode) &lt; 2">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:ExpectedCode 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:ExpectedValueNumeric) &lt; 2">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:ExpectedValueNumeric 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:MaximumValueNumeric) &lt; 2">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:MaximumValueNumeric 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:MinimumValueNumeric) &lt; 2">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:MinimumValueNumeric 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cbc:CertificationLevelDescription) &lt; 2">cac:TenderingCriterioncac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cbc:CertificationLevelDescription 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty">
			<sch:assert test="count(cac:ApplicablePeriod) &lt; 2">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cac:ApplicablePeriod 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cac:ApplicablePeriod">
			<sch:assert test="count(cbc:StartDate) &lt; 2">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cac:ApplicablePeriod/cbc:StartDate 0..1</sch:assert>
		</sch:rule>
		
		<sch:rule context="cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cac:ApplicablePeriod">
			<sch:assert test="count(cbc:EndDate) &lt; 2">cac:TenderingCriterion/cac:TenderingCriterionPropertyGroup/cac:TenderingCriterionProperty/cac:ApplicablePeriod/cbc:EndDate 0..1</sch:assert>
		</sch:rule>
				
	</sch:pattern>
</sch:schema>

